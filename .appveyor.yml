image: Ubuntu1804

skip_non_tags: true

environment:
  matrix:
    - ARCH: aarch64
    - ARCH: armv7
  
install:
  - sh: |-
      curl  -o automake.tar.xz      -L https://ftp.gnu.org/gnu/automake/automake-1.16.tar.xz 
      tar -xJf automake.tar.xz      || exit 1
      curl  -o llvm-mingw.tar.xz    -L https://github.com/mstorsjo/llvm-mingw/releases/download/20190920/llvm-mingw-20190920-ubuntu-16.04.tar.xz
      tar -xJf llvm-mingw.tar.xz    || exit 1
      curl  -o wxwidgets.tar.xz     -L https://github.com/driver1998/wxWidgets-woa/releases/download/v3.0.4-14-woa/wxwidgets-$ARCH-v3.0.4-14-woa.tar.xz
      tar -xJf wxwidgets.tar.xz     || exit 1
      curl  -o gmp.tar.xz           -L https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz
      tar -xJf gmp.tar.xz           || exit 1
      curl  -o gnutls.tar.xz        -L https://www.gnupg.org/ftp/gcrypt/gnutls/v3.6/gnutls-3.6.9.tar.xz
      tar -xJf gnutls.tar.xz        || exit 1
      curl  -o nettle.tar.gz        -L https://ftp.gnu.org/gnu/nettle/nettle-3.5.tar.gz
      tar -xzf nettle.tar.gz        || exit 1
      curl  -o sqlite.tar.gz        -L https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz
      tar -xzf sqlite.tar.gz        || exit 1
      curl  -o libfilezilla.tar.bz2 -L https://download.filezilla-project.org/libfilezilla/libfilezilla-0.19.3.tar.bz2 
      tar -xjf libfilezilla.tar.bz2 || exit 1
      curl  -o filezilla.tar.bz2    -L https://download.filezilla-project.org/client/FileZilla_latest_src.tar.bz2
      tar -xjf filezilla.tar.bz2    || exit 1

      sudo apt-get update -qq
      sudo apt-get install -y wx-common wine-stable

      if [ $ARCH != "armv7" ]
      then
        curl -o nsis.exe -L https://prdownloads.sourceforge.net/nsis/nsis-3.05-setup.exe
        wine nsis.exe /S
        if [ ! -f "$HOME/.wine/drive_c/Program Files/NSIS/makensis.exe" ]
        then
          echo "NSIS failed to install"
          exit 1
        fi
      fi
      chmod +x build.sh
      
build_script:
  sh: ./build.sh

after_build:
  ps: |-
      mv FileZilla.zip filezilla-$ARCH-$APPVEYOR_REPO_TAG_NAME.zip
      Push-AppveyorArtifact "FileZilla" -FileName filezilla-$ARCH-$APPVEYOR_REPO_TAG_NAME.exe

      if ($ARCH -ne "armv7") {
        mv FileZilla_3_setup.exe filezilla-$ARCH-$APPVEYOR_REPO_TAG_NAME.exe
        Push-AppveyorArtifact "FileZilla Installer" -FileName filezilla-$ARCH-$APPVEYOR_REPO_TAG_NAME.exe
      }

deploy:
  - release: $(APPVEYOR_REPO_TAG_NAME)
    description: Filezilla $(APPVEYOR_REPO_TAG_NAME)
    provider: GitHub
    artifact: /filezilla.*\.zip/
    auth_token:
      secure: H8HAtJ5SrLHk1gW1eYZFcjtekn1rIW7a8GJsNC6Nftcql8wE0seZRtYqMnFoQLnr
    draft: true

